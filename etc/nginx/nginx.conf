# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user  nginx;
pid   /run/nginx.pid;
error_log  /var/log/nginx/error.log;
worker_processes  2;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    log_format  dev   '$remote_addr - $remote_user [$time_local] '
                      '$status $pipe $request_time $gzip_ratio $body_bytes_sent '
                      '"$request" "$http_referer" "$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;

    gzip  on;
    gzip_proxied any;
    gzip_types text/plain text/css text/xml text/javascript text/x-js
        application/javascript application/x-javascript application/json
        application/xml application/xml+rss;
    gzip_vary on;

    #include /etc/nginx/conf.d/*.conf;

    server {
        listen       127.0.0.1:80 default_server;
        #listen [::]:80 ipv6only=on;
        listen       443 default_server ssl;
        #listen [::]:443 ipv6only=on ssl;
        server_name  host.domain.com;

        ssl_certificate      /etc/nginx/cert/server.crt;
        ssl_certificate_key  /etc/nginx/cert/server.key;
        #ssl_session_timeout  5m;

        root /var/web;
        index mediawiki/index.php;

        error_page  404              /404.html;
        error_page  500 502 503 504  /50x.html;
    
        autoindex off;
    
        #location = /_.gif {
        #    expires max;
        #    empty_gif;
        #}

        # deny script execution in mediawiki/images - mode 0755, restrict dir listing

        # deny access to mediawiki/images/deleted
        location ^~ /mediawiki/images/deleted/ {
            deny all;
        }
 
        location ^~ /mediawiki/maintenance/ {
            return 403;
        }
 
        location ^~ /mediawiki/cache/ {
            deny all;
        }
 
        # deny access to LocalSettings.php
        location ^~ /mediawiki/LocalSettings {
            deny all;
        }

        # deny access to mw-config
        location ^~ /mediawiki/mw-config {
            deny all;
        }

        #location ^~ /dumps {
        #    root /var/www/mediawiki/local;
        #    autoindex on;
        #}

        location ^~ /wiki {
            #index index.php;
            rewrite ^/wiki$ /mediawiki/index.php last;
            rewrite "^/wiki/([^?]*)(?:\?(.*))?" /mediawiki/index.php?title=$1&$args? last;
            #rewrite ^/wiki/([^?]*)(?:\?(.*))? /mediawiki/index.php?title=$1&$2? last;
            #rewrite ^ /mediawiki/index.php last;
        }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        location ~ /\.ht {
            deny all;
        }

        location ~* /mediawiki/extensions/[^/]+/LocalSettings {
            deny all;
        }

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        location ~* \.php$ {
            include        fastcgi.conf;
            try_files $uri =404;
            fastcgi_pass   127.0.0.1:9000;
            fastcgi_index  mediawiki/index.php;
            fastcgi_read_timeout 120;
            #fastcgi_intercept_errors on;
            client_max_body_size 20m;
            #client_body_timeout 60;
        }
    
        location ~* \.(jpg|jpeg|gif|png|ico|css|js|html|woff)$ {
            #try_files $uri /mediawiki/index.php;
            expires 7d;
            #log_not_found off;
        }
    
        location / {
            try_files $uri $uri/ /mediawiki/index.php;
        }

        #location / {
        #    try_files $uri $uri/ @rewrite;
        #}

        #location @rewrite {
        #    rewrite ^/(.*)$ /index.php?title=$1&$args;
        #}
    }
}
